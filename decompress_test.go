package crtf

import (
	"bytes"
	"testing"
)

// Test RTF decompression.
func TestDecompress(t *testing.T) {
	// Test decompression
	data := []byte{
		0x2d, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x00, 0x00, 0x4c, 0x5a, 0x46, 0x75,
		0xf1, 0xc5, 0xc7, 0xa7, 0x03, 0x00, 0x0a, 0x00, 0x72, 0x63, 0x70, 0x67,
		0x31, 0x32, 0x35, 0x42, 0x32, 0x0a, 0xf3, 0x20, 0x68, 0x65, 0x6c, 0x09,
		0x00, 0x20, 0x62, 0x77, 0x05, 0xb0, 0x6c, 0x64, 0x7d, 0x0a, 0x80, 0x0f,
		0xa0,
	}
	expected := []byte("{\\rtf1\\ansi\\ansicpg1252\\pard hello world}\r\n")

	result, err := Decompress(data)
	if err != nil {
		t.Fatalf("Decompress failed: %v", err)
	}

	if !bytes.Equal(result, expected) {
		t.Errorf("Decompress result mismatch.\nGot: %v\nWant: %v", result, expected)
	}

	// Test raw decompression
	rawData := []byte{
		0x2e, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00, 0x00, 0x4d, 0x45, 0x4c, 0x41,
		0x00, 0x00, 0x00, 0x00, 0x7b, 0x5c, 0x72, 0x74, 0x66, 0x31, 0x5c, 0x61,
		0x6e, 0x73, 0x69, 0x5c, 0x61, 0x6e, 0x73, 0x69, 0x63, 0x70, 0x67, 0x31,
		0x32, 0x35, 0x32, 0x5c, 0x70, 0x61, 0x72, 0x64, 0x20, 0x74, 0x65, 0x73,
		0x74, 0x7d,
	}
	expectedRaw := []byte("{\\rtf1\\ansi\\ansicpg1252\\pard test}")

	resultRaw, err := Decompress(rawData)
	if err != nil {
		t.Fatalf("Raw decompress failed: %v", err)
	}

	if !bytes.Equal(resultRaw, expectedRaw) {
		t.Errorf("Raw decompress result mismatch.\nGot: %v\nWant: %v", resultRaw, expectedRaw)
	}

	// Test < 16 bytes long data exception
	_, err = Decompress([]byte{})
	if err == nil {
		t.Error("Expected error for empty input, got nil")
	}

	_, err = Decompress([]byte("0123456789abcde"))
	if err == nil {
		t.Error("Expected error for input < 16 bytes, got nil")
	}

	// Test unknown compression type exception
	_, err = Decompress([]byte{0x10, 0x00, 0x00, 0x00, 0x11, 0x00, 0x00, 0x00, 0x41, 0x42, 0x43, 0x44, 0xff, 0xff, 0xff, 0xff})
	if err == nil {
		t.Error("Expected error for unknown compression type, got nil")
	}

	// Test invalid CRC exception
	_, err = Decompress([]byte{0x10, 0x00, 0x00, 0x00, 0x11, 0x00, 0x00, 0x00, 0x4c, 0x5a, 0x46, 0x75, 0xff, 0xff, 0xff, 0xff})
	if err == nil {
		t.Error("Expected error for invalid CRC, got nil")
	}
}
